오늘의 커리큘럼
웹서비스 구조 -> SQL, NoSQL -> 데이터베이스 실습

Br(브라우저)

컴퓨터(클라우드)를 빌려서 우리가 쓸 수 있다.
aws, gcp, 애저 등

프론트엔드, 백엔드, 데이터베이스 전부 컴퓨터 한개씩은 필요하다.
(정확히는 각 프로그램이 필요한 것, 총 3개. 그러나 요즘은 각 컴퓨터에 한개씩만 설치하는 편.)

지금은 내가 로컬호스트 해서 내 컴퓨터에서만 띄우게 할 수 잇었지만 이제는 누구든지 띄울 수 있게 해야한다.

1. 프론트에서 유저 브라우저에게 html, css, js를 보내준다.(껍데기만, 구멍난채로)
2. 유저가 껍데기만 받는다.
3. 유저 브라우저에서 백엔드에게 useQuery 등 api를 요청한다
4. 백엔드에서 db로 가서 데이터를 꺼내온다.
5. 백엔드에서 유저 브라우저에게 데이터를 전달해준다.
6. 유저 브라우저의 구멍이 채워진다.


Br(apollo-client)
백엔드(apollo-server)
백엔드 -> db(ORM/ODM)

db에 저장하는 방식 두가지
    1. 표<table>에 저장 => SQL, RDB // 프로그램 : Oracle, MySQL, PostgreSGL
    2. 서류봉투<collection>(각각의 문서<document>)에 저장 => NoSQL(not only sql) // 프로그램 : MongoDB, Firebase

ORM: relation, db가 rdb일때 연결(표)
    sequalize, prisma, typeorm
ODM: document, db가 nosql일때 연결(서류봉투)

dbeaver : db 관리 툴
db안에있는걸 볼 수 있게 해줌

db에 포스트그레스 설치 -> 5432 => 여기 코캠 example 그거는 34.64.207.239라는 주소에 설치되어있음(비번 : postgres2021)
백엔드에는 java, python, node.js 등 백엔드 언어 설치 -> 8000, 8080
프론트에는 next.js 등 설치 -> 3000
프론트엔드 서버.

포트는 중복이 되면 안됨

포트주소 - 선우님: 3311
비밀번호 - codecamp
driver properties => allowPublicKeyRetrieval을 true로

javascript - nest.js
python - django
java - spring

1. table만들기
2. api만들어서 저장시키기

타입스크립트를 node.js가 실행되게
ts-node로 열기

? 있을 숟 ㅗ있고 없을 수도 있고
! 반드시 있어야 한다