오늘의 커리큘럼
객체/배열 복사 -> 무한스크롤

무한스크롤이 대세임;;


storybook
디자이너와 개발자가 함께 보고 작업하는 툴
여러 컴포넌트에 숫자를 붙이고 잘 나눠놓으면 관리도 편하고 보기에도 좋음

자식1, 자식2
자식1의 state와 setState를 부모쪽으로 끌어올린 후 자식에게 뿌리면 된다

자식의 버튼으로 카운트+1을 할건데 부모꺼를 올려야한다
부모의 setState를 가져오면 된다.

---> state 끌어올리기!

객체에서 복사 후 안에 있는 내용을 바꿨을 때
복사된 것까지 같이 바뀌게 된다.

문자, 숫자, 불린은 복사한 것은 그대로 복사가 된다
객체, 배열은 
값은 다른곳에 저장되어 있고 그 주소만 저장되는 것
그래서 복사를 하면 같은 주소를 복사하게 된다.
그래서 그 안에있는 것을 바꾸면 따라서 바뀌게 되는 것이다.

const profile = {
    name: "철수",
    age: 8,
    school: "다람쥐초등학교"
}
// undefined
const friendProfile = {
    name: profile.name,
    age: profile.age,
    school: profile.school
}
// undefined
profile.name = "영희"
// '영희' 
friendProfile
// {name: '철수', age: 8, school: '다람쥐초등학교'}

객체를 복사를 할려면 이런식으로 새로 객체를 만들어서 각각을 박아 넣어야 한다.

const friendprofile2 = {
    ...profile
}
// undefined
friendprofile2
// {name: '영희', age: 8, school: '다람쥐초등학교'}

이런식으로 ...profile처럼 해서 새로 만들 수 있다.
복사하는 것처럼 매우 쉽게
이런것을 스프레드 연산자 라고 한다.

배열의 경우에도 [...array] 처럼 해서 복사하는 것처럼 가져올 수 있다.

그러나
스프레드 연산자는 객체안의 객체를 가져올 수는 없다.

...profile
얕은복사 shallow copy
겉에만 복사하는 것

JSON.stringify(profile)
객체를 문자열화
JSON.parse(JSON.stringify(profile))
문자열화 시킨 것을 다시 새롭게 객체화

lodash의 clone deep 을 사용하게 되면 더욱 효ㅠㄹ적인 방법으로 가능하다

객체에서 키가 겹치면 아래쪽꺼개 위쪽꺼를 대체한다

무한스크롤에서 내가 필요한 부분에만 스크롤을 줄 수가 있따
usewindow를 false로 해서 ~~~

